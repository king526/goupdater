// Code generated by protoc-gen-go. DO NOT EDIT.
// source: upgrade.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type VersionRsp struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Branch               string   `protobuf:"bytes,2,opt,name=branch,proto3" json:"branch,omitempty"`
	Commit               string   `protobuf:"bytes,3,opt,name=commit,proto3" json:"commit,omitempty"`
	ModTime              string   `protobuf:"bytes,4,opt,name=modTime,proto3" json:"modTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionRsp) Reset()         { *m = VersionRsp{} }
func (m *VersionRsp) String() string { return proto.CompactTextString(m) }
func (*VersionRsp) ProtoMessage()    {}
func (*VersionRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6adee5b6c4cf09e, []int{0}
}

func (m *VersionRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionRsp.Unmarshal(m, b)
}
func (m *VersionRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionRsp.Marshal(b, m, deterministic)
}
func (m *VersionRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionRsp.Merge(m, src)
}
func (m *VersionRsp) XXX_Size() int {
	return xxx_messageInfo_VersionRsp.Size(m)
}
func (m *VersionRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionRsp.DiscardUnknown(m)
}

var xxx_messageInfo_VersionRsp proto.InternalMessageInfo

func (m *VersionRsp) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *VersionRsp) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *VersionRsp) GetCommit() string {
	if m != nil {
		return m.Commit
	}
	return ""
}

func (m *VersionRsp) GetModTime() string {
	if m != nil {
		return m.ModTime
	}
	return ""
}

type Null struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Null) Reset()         { *m = Null{} }
func (m *Null) String() string { return proto.CompactTextString(m) }
func (*Null) ProtoMessage()    {}
func (*Null) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6adee5b6c4cf09e, []int{1}
}

func (m *Null) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Null.Unmarshal(m, b)
}
func (m *Null) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Null.Marshal(b, m, deterministic)
}
func (m *Null) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Null.Merge(m, src)
}
func (m *Null) XXX_Size() int {
	return xxx_messageInfo_Null.Size(m)
}
func (m *Null) XXX_DiscardUnknown() {
	xxx_messageInfo_Null.DiscardUnknown(m)
}

var xxx_messageInfo_Null proto.InternalMessageInfo

type UploadReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadReq) Reset()         { *m = UploadReq{} }
func (m *UploadReq) String() string { return proto.CompactTextString(m) }
func (*UploadReq) ProtoMessage()    {}
func (*UploadReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6adee5b6c4cf09e, []int{2}
}

func (m *UploadReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadReq.Unmarshal(m, b)
}
func (m *UploadReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadReq.Marshal(b, m, deterministic)
}
func (m *UploadReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadReq.Merge(m, src)
}
func (m *UploadReq) XXX_Size() int {
	return xxx_messageInfo_UploadReq.Size(m)
}
func (m *UploadReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadReq.DiscardUnknown(m)
}

var xxx_messageInfo_UploadReq proto.InternalMessageInfo

func (m *UploadReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UploadReq) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateReq struct {
	Tag                  string   `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateReq) Reset()         { *m = UpdateReq{} }
func (m *UpdateReq) String() string { return proto.CompactTextString(m) }
func (*UpdateReq) ProtoMessage()    {}
func (*UpdateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6adee5b6c4cf09e, []int{3}
}

func (m *UpdateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateReq.Unmarshal(m, b)
}
func (m *UpdateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateReq.Marshal(b, m, deterministic)
}
func (m *UpdateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateReq.Merge(m, src)
}
func (m *UpdateReq) XXX_Size() int {
	return xxx_messageInfo_UpdateReq.Size(m)
}
func (m *UpdateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateReq proto.InternalMessageInfo

func (m *UpdateReq) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *UpdateReq) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type RollbackReq struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RollbackReq) Reset()         { *m = RollbackReq{} }
func (m *RollbackReq) String() string { return proto.CompactTextString(m) }
func (*RollbackReq) ProtoMessage()    {}
func (*RollbackReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6adee5b6c4cf09e, []int{4}
}

func (m *RollbackReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RollbackReq.Unmarshal(m, b)
}
func (m *RollbackReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RollbackReq.Marshal(b, m, deterministic)
}
func (m *RollbackReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollbackReq.Merge(m, src)
}
func (m *RollbackReq) XXX_Size() int {
	return xxx_messageInfo_RollbackReq.Size(m)
}
func (m *RollbackReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RollbackReq.DiscardUnknown(m)
}

var xxx_messageInfo_RollbackReq proto.InternalMessageInfo

func (m *RollbackReq) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type RollbackRsp struct {
	Version              []string `protobuf:"bytes,1,rep,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RollbackRsp) Reset()         { *m = RollbackRsp{} }
func (m *RollbackRsp) String() string { return proto.CompactTextString(m) }
func (*RollbackRsp) ProtoMessage()    {}
func (*RollbackRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6adee5b6c4cf09e, []int{5}
}

func (m *RollbackRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RollbackRsp.Unmarshal(m, b)
}
func (m *RollbackRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RollbackRsp.Marshal(b, m, deterministic)
}
func (m *RollbackRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollbackRsp.Merge(m, src)
}
func (m *RollbackRsp) XXX_Size() int {
	return xxx_messageInfo_RollbackRsp.Size(m)
}
func (m *RollbackRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_RollbackRsp.DiscardUnknown(m)
}

var xxx_messageInfo_RollbackRsp proto.InternalMessageInfo

func (m *RollbackRsp) GetVersion() []string {
	if m != nil {
		return m.Version
	}
	return nil
}

type ExecReq struct {
	Cmd                  string   `protobuf:"bytes,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecReq) Reset()         { *m = ExecReq{} }
func (m *ExecReq) String() string { return proto.CompactTextString(m) }
func (*ExecReq) ProtoMessage()    {}
func (*ExecReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6adee5b6c4cf09e, []int{6}
}

func (m *ExecReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecReq.Unmarshal(m, b)
}
func (m *ExecReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecReq.Marshal(b, m, deterministic)
}
func (m *ExecReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecReq.Merge(m, src)
}
func (m *ExecReq) XXX_Size() int {
	return xxx_messageInfo_ExecReq.Size(m)
}
func (m *ExecReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecReq.DiscardUnknown(m)
}

var xxx_messageInfo_ExecReq proto.InternalMessageInfo

func (m *ExecReq) GetCmd() string {
	if m != nil {
		return m.Cmd
	}
	return ""
}

type ExecRsp struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecRsp) Reset()         { *m = ExecRsp{} }
func (m *ExecRsp) String() string { return proto.CompactTextString(m) }
func (*ExecRsp) ProtoMessage()    {}
func (*ExecRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6adee5b6c4cf09e, []int{7}
}

func (m *ExecRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecRsp.Unmarshal(m, b)
}
func (m *ExecRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecRsp.Marshal(b, m, deterministic)
}
func (m *ExecRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecRsp.Merge(m, src)
}
func (m *ExecRsp) XXX_Size() int {
	return xxx_messageInfo_ExecRsp.Size(m)
}
func (m *ExecRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecRsp.DiscardUnknown(m)
}

var xxx_messageInfo_ExecRsp proto.InternalMessageInfo

func (m *ExecRsp) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type SignalReq struct {
	Signal               int32    `protobuf:"varint,1,opt,name=signal,proto3" json:"signal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignalReq) Reset()         { *m = SignalReq{} }
func (m *SignalReq) String() string { return proto.CompactTextString(m) }
func (*SignalReq) ProtoMessage()    {}
func (*SignalReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6adee5b6c4cf09e, []int{8}
}

func (m *SignalReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignalReq.Unmarshal(m, b)
}
func (m *SignalReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignalReq.Marshal(b, m, deterministic)
}
func (m *SignalReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignalReq.Merge(m, src)
}
func (m *SignalReq) XXX_Size() int {
	return xxx_messageInfo_SignalReq.Size(m)
}
func (m *SignalReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SignalReq.DiscardUnknown(m)
}

var xxx_messageInfo_SignalReq proto.InternalMessageInfo

func (m *SignalReq) GetSignal() int32 {
	if m != nil {
		return m.Signal
	}
	return 0
}

type CommandReq struct {
	Cmd                  string   `protobuf:"bytes,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
	Args                 []string `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandReq) Reset()         { *m = CommandReq{} }
func (m *CommandReq) String() string { return proto.CompactTextString(m) }
func (*CommandReq) ProtoMessage()    {}
func (*CommandReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6adee5b6c4cf09e, []int{9}
}

func (m *CommandReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandReq.Unmarshal(m, b)
}
func (m *CommandReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandReq.Marshal(b, m, deterministic)
}
func (m *CommandReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandReq.Merge(m, src)
}
func (m *CommandReq) XXX_Size() int {
	return xxx_messageInfo_CommandReq.Size(m)
}
func (m *CommandReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandReq.DiscardUnknown(m)
}

var xxx_messageInfo_CommandReq proto.InternalMessageInfo

func (m *CommandReq) GetCmd() string {
	if m != nil {
		return m.Cmd
	}
	return ""
}

func (m *CommandReq) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

type CommandRsp struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandRsp) Reset()         { *m = CommandRsp{} }
func (m *CommandRsp) String() string { return proto.CompactTextString(m) }
func (*CommandRsp) ProtoMessage()    {}
func (*CommandRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6adee5b6c4cf09e, []int{10}
}

func (m *CommandRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandRsp.Unmarshal(m, b)
}
func (m *CommandRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandRsp.Marshal(b, m, deterministic)
}
func (m *CommandRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandRsp.Merge(m, src)
}
func (m *CommandRsp) XXX_Size() int {
	return xxx_messageInfo_CommandRsp.Size(m)
}
func (m *CommandRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandRsp.DiscardUnknown(m)
}

var xxx_messageInfo_CommandRsp proto.InternalMessageInfo

func (m *CommandRsp) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*VersionRsp)(nil), "pb.VersionRsp")
	proto.RegisterType((*Null)(nil), "pb.Null")
	proto.RegisterType((*UploadReq)(nil), "pb.UploadReq")
	proto.RegisterType((*UpdateReq)(nil), "pb.UpdateReq")
	proto.RegisterType((*RollbackReq)(nil), "pb.RollbackReq")
	proto.RegisterType((*RollbackRsp)(nil), "pb.RollbackRsp")
	proto.RegisterType((*ExecReq)(nil), "pb.ExecReq")
	proto.RegisterType((*ExecRsp)(nil), "pb.ExecRsp")
	proto.RegisterType((*SignalReq)(nil), "pb.SignalReq")
	proto.RegisterType((*CommandReq)(nil), "pb.CommandReq")
	proto.RegisterType((*CommandRsp)(nil), "pb.CommandRsp")
}

func init() { proto.RegisterFile("upgrade.proto", fileDescriptor_b6adee5b6c4cf09e) }

var fileDescriptor_b6adee5b6c4cf09e = []byte{
	// 399 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x53, 0xc1, 0x8e, 0xd3, 0x30,
	0x10, 0xdd, 0xa6, 0x21, 0xd9, 0xce, 0xb2, 0x05, 0xf9, 0x50, 0x45, 0x41, 0x20, 0xe4, 0xaa, 0xa2,
	0x12, 0x52, 0x24, 0xda, 0x4f, 0x40, 0x5c, 0x39, 0xa4, 0x94, 0xbb, 0x13, 0x5b, 0x21, 0x22, 0x8e,
	0x4d, 0x9c, 0x56, 0xfc, 0x13, 0x3f, 0x89, 0xc6, 0x76, 0x92, 0xb6, 0xea, 0xde, 0xe6, 0xcd, 0xcc,
	0x9b, 0x19, 0xbf, 0x97, 0xc0, 0xf3, 0x49, 0x57, 0x1d, 0xe3, 0x22, 0xd3, 0x9d, 0xea, 0x15, 0x09,
	0x74, 0x41, 0x35, 0xc0, 0x4f, 0xd1, 0x99, 0x5a, 0xb5, 0xb9, 0xd1, 0x24, 0x81, 0xf8, 0xec, 0x50,
	0x32, 0xfb, 0x38, 0xdb, 0x2e, 0xf2, 0x01, 0x92, 0x15, 0x44, 0x45, 0xc7, 0xda, 0xf2, 0x57, 0x12,
	0xd8, 0x82, 0x47, 0x98, 0x2f, 0x95, 0x94, 0x75, 0x9f, 0xcc, 0x5d, 0xde, 0x21, 0x9c, 0x24, 0x15,
	0xff, 0x51, 0x4b, 0x91, 0x84, 0x6e, 0x92, 0x87, 0x34, 0x82, 0xf0, 0xfb, 0xa9, 0x69, 0xe8, 0x1e,
	0x16, 0x47, 0xdd, 0x28, 0xc6, 0x73, 0xf1, 0x87, 0x10, 0x08, 0x5b, 0x26, 0x85, 0xdf, 0x6a, 0x63,
	0xcc, 0x71, 0xd6, 0x33, 0xbb, 0xf0, 0x75, 0x6e, 0x63, 0xfa, 0x05, 0x49, 0x9c, 0xf5, 0x02, 0x49,
	0x6f, 0x61, 0xde, 0xb3, 0xca, 0x73, 0x30, 0xbc, 0x4b, 0xf9, 0x04, 0x4f, 0xb9, 0x6a, 0x9a, 0x82,
	0x95, 0xbf, 0x91, 0xf4, 0xe2, 0x13, 0xaf, 0x1a, 0x6f, 0xb5, 0x98, 0x5f, 0x36, 0xbe, 0x83, 0xf8,
	0xdb, 0x5f, 0x51, 0xfa, 0x13, 0x4a, 0xc9, 0x87, 0x13, 0x4a, 0xc9, 0xe9, 0x7b, 0x5f, 0x34, 0x7a,
	0xbc, 0xc6, 0x3f, 0xca, 0x5e, 0xb3, 0x86, 0xc5, 0xa1, 0xae, 0x5a, 0xd6, 0x20, 0x7b, 0x05, 0x91,
	0xb1, 0xc0, 0xb6, 0xbc, 0xca, 0x3d, 0xa2, 0x3b, 0x80, 0xaf, 0x4a, 0x4a, 0xd6, 0xf2, 0xbb, 0x3b,
	0x70, 0x30, 0xeb, 0x2a, 0x93, 0x04, 0xf6, 0x2e, 0x1b, 0xd3, 0x0f, 0x13, 0xc7, 0x68, 0xe4, 0x48,
	0x33, 0x4a, 0x23, 0x4d, 0xb5, 0xfb, 0x17, 0xc0, 0xf2, 0xe8, 0xec, 0x3f, 0x88, 0xee, 0x5c, 0x97,
	0x82, 0x6c, 0x20, 0xf6, 0xde, 0x93, 0xc7, 0x4c, 0x17, 0x19, 0xda, 0x92, 0x2e, 0x31, 0x9a, 0x3e,
	0x09, 0xfa, 0x40, 0x36, 0x10, 0x39, 0xa3, 0xc8, 0x33, 0xd6, 0x46, 0xd3, 0xd2, 0x91, 0x44, 0x1f,
	0xb6, 0x33, 0xd7, 0x86, 0xd6, 0x0c, 0x6d, 0xde, 0xa6, 0x9b, 0xb6, 0x0c, 0x1e, 0x07, 0x95, 0xc9,
	0x1b, 0xac, 0x5c, 0x98, 0x93, 0x5e, 0x27, 0xec, 0x76, 0x0a, 0x21, 0xea, 0x49, 0x9e, 0xb0, 0xe4,
	0x65, 0x4f, 0x27, 0x60, 0x7b, 0xd6, 0x10, 0x39, 0x51, 0xdd, 0xea, 0x51, 0xe0, 0xcb, 0xd5, 0xe4,
	0x33, 0xc4, 0x5e, 0x20, 0x62, 0xdf, 0x38, 0x29, 0x9c, 0x5e, 0x61, 0x9c, 0x58, 0x44, 0xf6, 0x0f,
	0xd9, 0xff, 0x0f, 0x00, 0x00, 0xff, 0xff, 0xf1, 0x06, 0x0f, 0x4e, 0x32, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UpgradeServiceClient is the client API for UpgradeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UpgradeServiceClient interface {
	Version(ctx context.Context, in *Null, opts ...grpc.CallOption) (*VersionRsp, error)
	Upload(ctx context.Context, opts ...grpc.CallOption) (UpgradeService_UploadClient, error)
	Update(ctx context.Context, opts ...grpc.CallOption) (UpgradeService_UpdateClient, error)
	Rollback(ctx context.Context, in *RollbackReq, opts ...grpc.CallOption) (*RollbackRsp, error)
	Exec(ctx context.Context, in *ExecReq, opts ...grpc.CallOption) (*ExecRsp, error)
	Signal(ctx context.Context, in *SignalReq, opts ...grpc.CallOption) (*Null, error)
	Command(ctx context.Context, in *CommandReq, opts ...grpc.CallOption) (*CommandRsp, error)
}

type upgradeServiceClient struct {
	cc *grpc.ClientConn
}

func NewUpgradeServiceClient(cc *grpc.ClientConn) UpgradeServiceClient {
	return &upgradeServiceClient{cc}
}

func (c *upgradeServiceClient) Version(ctx context.Context, in *Null, opts ...grpc.CallOption) (*VersionRsp, error) {
	out := new(VersionRsp)
	err := c.cc.Invoke(ctx, "/pb.UpgradeService/Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *upgradeServiceClient) Upload(ctx context.Context, opts ...grpc.CallOption) (UpgradeService_UploadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_UpgradeService_serviceDesc.Streams[0], "/pb.UpgradeService/Upload", opts...)
	if err != nil {
		return nil, err
	}
	x := &upgradeServiceUploadClient{stream}
	return x, nil
}

type UpgradeService_UploadClient interface {
	Send(*UploadReq) error
	CloseAndRecv() (*Null, error)
	grpc.ClientStream
}

type upgradeServiceUploadClient struct {
	grpc.ClientStream
}

func (x *upgradeServiceUploadClient) Send(m *UploadReq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *upgradeServiceUploadClient) CloseAndRecv() (*Null, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(Null)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *upgradeServiceClient) Update(ctx context.Context, opts ...grpc.CallOption) (UpgradeService_UpdateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_UpgradeService_serviceDesc.Streams[1], "/pb.UpgradeService/Update", opts...)
	if err != nil {
		return nil, err
	}
	x := &upgradeServiceUpdateClient{stream}
	return x, nil
}

type UpgradeService_UpdateClient interface {
	Send(*UpdateReq) error
	CloseAndRecv() (*Null, error)
	grpc.ClientStream
}

type upgradeServiceUpdateClient struct {
	grpc.ClientStream
}

func (x *upgradeServiceUpdateClient) Send(m *UpdateReq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *upgradeServiceUpdateClient) CloseAndRecv() (*Null, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(Null)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *upgradeServiceClient) Rollback(ctx context.Context, in *RollbackReq, opts ...grpc.CallOption) (*RollbackRsp, error) {
	out := new(RollbackRsp)
	err := c.cc.Invoke(ctx, "/pb.UpgradeService/Rollback", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *upgradeServiceClient) Exec(ctx context.Context, in *ExecReq, opts ...grpc.CallOption) (*ExecRsp, error) {
	out := new(ExecRsp)
	err := c.cc.Invoke(ctx, "/pb.UpgradeService/Exec", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *upgradeServiceClient) Signal(ctx context.Context, in *SignalReq, opts ...grpc.CallOption) (*Null, error) {
	out := new(Null)
	err := c.cc.Invoke(ctx, "/pb.UpgradeService/Signal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *upgradeServiceClient) Command(ctx context.Context, in *CommandReq, opts ...grpc.CallOption) (*CommandRsp, error) {
	out := new(CommandRsp)
	err := c.cc.Invoke(ctx, "/pb.UpgradeService/Command", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UpgradeServiceServer is the server API for UpgradeService service.
type UpgradeServiceServer interface {
	Version(context.Context, *Null) (*VersionRsp, error)
	Upload(UpgradeService_UploadServer) error
	Update(UpgradeService_UpdateServer) error
	Rollback(context.Context, *RollbackReq) (*RollbackRsp, error)
	Exec(context.Context, *ExecReq) (*ExecRsp, error)
	Signal(context.Context, *SignalReq) (*Null, error)
	Command(context.Context, *CommandReq) (*CommandRsp, error)
}

func RegisterUpgradeServiceServer(s *grpc.Server, srv UpgradeServiceServer) {
	s.RegisterService(&_UpgradeService_serviceDesc, srv)
}

func _UpgradeService_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Null)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UpgradeServiceServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UpgradeService/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UpgradeServiceServer).Version(ctx, req.(*Null))
	}
	return interceptor(ctx, in, info, handler)
}

func _UpgradeService_Upload_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(UpgradeServiceServer).Upload(&upgradeServiceUploadServer{stream})
}

type UpgradeService_UploadServer interface {
	SendAndClose(*Null) error
	Recv() (*UploadReq, error)
	grpc.ServerStream
}

type upgradeServiceUploadServer struct {
	grpc.ServerStream
}

func (x *upgradeServiceUploadServer) SendAndClose(m *Null) error {
	return x.ServerStream.SendMsg(m)
}

func (x *upgradeServiceUploadServer) Recv() (*UploadReq, error) {
	m := new(UploadReq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _UpgradeService_Update_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(UpgradeServiceServer).Update(&upgradeServiceUpdateServer{stream})
}

type UpgradeService_UpdateServer interface {
	SendAndClose(*Null) error
	Recv() (*UpdateReq, error)
	grpc.ServerStream
}

type upgradeServiceUpdateServer struct {
	grpc.ServerStream
}

func (x *upgradeServiceUpdateServer) SendAndClose(m *Null) error {
	return x.ServerStream.SendMsg(m)
}

func (x *upgradeServiceUpdateServer) Recv() (*UpdateReq, error) {
	m := new(UpdateReq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _UpgradeService_Rollback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RollbackReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UpgradeServiceServer).Rollback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UpgradeService/Rollback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UpgradeServiceServer).Rollback(ctx, req.(*RollbackReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UpgradeService_Exec_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UpgradeServiceServer).Exec(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UpgradeService/Exec",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UpgradeServiceServer).Exec(ctx, req.(*ExecReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UpgradeService_Signal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignalReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UpgradeServiceServer).Signal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UpgradeService/Signal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UpgradeServiceServer).Signal(ctx, req.(*SignalReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UpgradeService_Command_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommandReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UpgradeServiceServer).Command(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UpgradeService/Command",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UpgradeServiceServer).Command(ctx, req.(*CommandReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _UpgradeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.UpgradeService",
	HandlerType: (*UpgradeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Version",
			Handler:    _UpgradeService_Version_Handler,
		},
		{
			MethodName: "Rollback",
			Handler:    _UpgradeService_Rollback_Handler,
		},
		{
			MethodName: "Exec",
			Handler:    _UpgradeService_Exec_Handler,
		},
		{
			MethodName: "Signal",
			Handler:    _UpgradeService_Signal_Handler,
		},
		{
			MethodName: "Command",
			Handler:    _UpgradeService_Command_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Upload",
			Handler:       _UpgradeService_Upload_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "Update",
			Handler:       _UpgradeService_Update_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "upgrade.proto",
}
